// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.7.1
// source: grapherino.proto

package grapherino

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Connection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	To     string `protobuf:"bytes,1,opt,name=to,proto3" json:"to,omitempty"`
	From   string `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	Weight int64  `protobuf:"varint,3,opt,name=weight,proto3" json:"weight,omitempty"`
}

func (x *Connection) Reset() {
	*x = Connection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grapherino_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Connection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Connection) ProtoMessage() {}

func (x *Connection) ProtoReflect() protoreflect.Message {
	mi := &file_grapherino_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Connection.ProtoReflect.Descriptor instead.
func (*Connection) Descriptor() ([]byte, []int) {
	return file_grapherino_proto_rawDescGZIP(), []int{0}
}

func (x *Connection) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *Connection) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *Connection) GetWeight() int64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

type NetworkMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Connections []*Connection `protobuf:"bytes,1,rep,name=connections,proto3" json:"connections,omitempty"`
}

func (x *NetworkMap) Reset() {
	*x = NetworkMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grapherino_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkMap) ProtoMessage() {}

func (x *NetworkMap) ProtoReflect() protoreflect.Message {
	mi := &file_grapherino_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkMap.ProtoReflect.Descriptor instead.
func (*NetworkMap) Descriptor() ([]byte, []int) {
	return file_grapherino_proto_rawDescGZIP(), []int{1}
}

func (x *NetworkMap) GetConnections() []*Connection {
	if x != nil {
		return x.Connections
	}
	return nil
}

type ExchangeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetMap *NetworkMap `protobuf:"bytes,1,opt,name=netMap,proto3" json:"netMap,omitempty"`
}

func (x *ExchangeReq) Reset() {
	*x = ExchangeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grapherino_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExchangeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeReq) ProtoMessage() {}

func (x *ExchangeReq) ProtoReflect() protoreflect.Message {
	mi := &file_grapherino_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeReq.ProtoReflect.Descriptor instead.
func (*ExchangeReq) Descriptor() ([]byte, []int) {
	return file_grapherino_proto_rawDescGZIP(), []int{2}
}

func (x *ExchangeReq) GetNetMap() *NetworkMap {
	if x != nil {
		return x.NetMap
	}
	return nil
}

type ExchangeRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetMap *NetworkMap `protobuf:"bytes,1,opt,name=netMap,proto3" json:"netMap,omitempty"`
}

func (x *ExchangeRes) Reset() {
	*x = ExchangeRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grapherino_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExchangeRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeRes) ProtoMessage() {}

func (x *ExchangeRes) ProtoReflect() protoreflect.Message {
	mi := &file_grapherino_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeRes.ProtoReflect.Descriptor instead.
func (*ExchangeRes) Descriptor() ([]byte, []int) {
	return file_grapherino_proto_rawDescGZIP(), []int{3}
}

func (x *ExchangeRes) GetNetMap() *NetworkMap {
	if x != nil {
		return x.NetMap
	}
	return nil
}

var File_grapherino_proto protoreflect.FileDescriptor

var file_grapherino_proto_rawDesc = []byte{
	0x0a, 0x10, 0x67, 0x72, 0x61, 0x70, 0x68, 0x65, 0x72, 0x69, 0x6e, 0x6f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x67, 0x72, 0x61, 0x70, 0x68, 0x65, 0x72, 0x69, 0x6e, 0x6f, 0x22, 0x48,
	0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02,
	0x74, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x12, 0x0a, 0x04,
	0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d,
	0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x46, 0x0a, 0x0a, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x4d, 0x61, 0x70, 0x12, 0x38, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x72,
	0x61, 0x70, 0x68, 0x65, 0x72, 0x69, 0x6e, 0x6f, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x22, 0x3d, 0x0a, 0x0b, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x2e, 0x0a, 0x06, 0x6e, 0x65, 0x74, 0x4d, 0x61, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x65, 0x72, 0x69, 0x6e, 0x6f, 0x2e, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x4d, 0x61, 0x70, 0x52, 0x06, 0x6e, 0x65, 0x74, 0x4d, 0x61, 0x70, 0x22,
	0x3d, 0x0a, 0x0b, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x12, 0x2e,
	0x0a, 0x06, 0x6e, 0x65, 0x74, 0x4d, 0x61, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x65, 0x72, 0x69, 0x6e, 0x6f, 0x2e, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x4d, 0x61, 0x70, 0x52, 0x06, 0x6e, 0x65, 0x74, 0x4d, 0x61, 0x70, 0x32, 0x4a,
	0x0a, 0x0a, 0x47, 0x72, 0x61, 0x70, 0x68, 0x65, 0x72, 0x69, 0x6e, 0x6f, 0x12, 0x3c, 0x0a, 0x08,
	0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x17, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x65, 0x72, 0x69, 0x6e, 0x6f, 0x2e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x17, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x65, 0x72, 0x69, 0x6e, 0x6f, 0x2e, 0x45,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_grapherino_proto_rawDescOnce sync.Once
	file_grapherino_proto_rawDescData = file_grapherino_proto_rawDesc
)

func file_grapherino_proto_rawDescGZIP() []byte {
	file_grapherino_proto_rawDescOnce.Do(func() {
		file_grapherino_proto_rawDescData = protoimpl.X.CompressGZIP(file_grapherino_proto_rawDescData)
	})
	return file_grapherino_proto_rawDescData
}

var file_grapherino_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_grapherino_proto_goTypes = []interface{}{
	(*Connection)(nil),  // 0: grapherino.Connection
	(*NetworkMap)(nil),  // 1: grapherino.NetworkMap
	(*ExchangeReq)(nil), // 2: grapherino.ExchangeReq
	(*ExchangeRes)(nil), // 3: grapherino.ExchangeRes
}
var file_grapherino_proto_depIdxs = []int32{
	0, // 0: grapherino.NetworkMap.connections:type_name -> grapherino.Connection
	1, // 1: grapherino.ExchangeReq.netMap:type_name -> grapherino.NetworkMap
	1, // 2: grapherino.ExchangeRes.netMap:type_name -> grapherino.NetworkMap
	2, // 3: grapherino.Grapherino.Exchange:input_type -> grapherino.ExchangeReq
	3, // 4: grapherino.Grapherino.Exchange:output_type -> grapherino.ExchangeRes
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_grapherino_proto_init() }
func file_grapherino_proto_init() {
	if File_grapherino_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_grapherino_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Connection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grapherino_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grapherino_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExchangeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grapherino_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExchangeRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_grapherino_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_grapherino_proto_goTypes,
		DependencyIndexes: file_grapherino_proto_depIdxs,
		MessageInfos:      file_grapherino_proto_msgTypes,
	}.Build()
	File_grapherino_proto = out.File
	file_grapherino_proto_rawDesc = nil
	file_grapherino_proto_goTypes = nil
	file_grapherino_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GrapherinoClient is the client API for Grapherino service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GrapherinoClient interface {
	Exchange(ctx context.Context, in *ExchangeReq, opts ...grpc.CallOption) (*ExchangeRes, error)
}

type grapherinoClient struct {
	cc grpc.ClientConnInterface
}

func NewGrapherinoClient(cc grpc.ClientConnInterface) GrapherinoClient {
	return &grapherinoClient{cc}
}

func (c *grapherinoClient) Exchange(ctx context.Context, in *ExchangeReq, opts ...grpc.CallOption) (*ExchangeRes, error) {
	out := new(ExchangeRes)
	err := c.cc.Invoke(ctx, "/grapherino.Grapherino/Exchange", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GrapherinoServer is the server API for Grapherino service.
type GrapherinoServer interface {
	Exchange(context.Context, *ExchangeReq) (*ExchangeRes, error)
}

// UnimplementedGrapherinoServer can be embedded to have forward compatible implementations.
type UnimplementedGrapherinoServer struct {
}

func (*UnimplementedGrapherinoServer) Exchange(context.Context, *ExchangeReq) (*ExchangeRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Exchange not implemented")
}

func RegisterGrapherinoServer(s *grpc.Server, srv GrapherinoServer) {
	s.RegisterService(&_Grapherino_serviceDesc, srv)
}

func _Grapherino_Exchange_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExchangeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrapherinoServer).Exchange(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grapherino.Grapherino/Exchange",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrapherinoServer).Exchange(ctx, req.(*ExchangeReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Grapherino_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grapherino.Grapherino",
	HandlerType: (*GrapherinoServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Exchange",
			Handler:    _Grapherino_Exchange_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "grapherino.proto",
}
