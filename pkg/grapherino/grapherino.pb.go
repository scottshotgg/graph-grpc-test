// Code generated by protoc-gen-go. DO NOT EDIT.
// source: grapherino.proto

package grapherino

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Connection struct {
	To                   string   `protobuf:"bytes,1,opt,name=to,proto3" json:"to,omitempty"`
	Weight               int64    `protobuf:"varint,2,opt,name=weight,proto3" json:"weight,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Connection) Reset()         { *m = Connection{} }
func (m *Connection) String() string { return proto.CompactTextString(m) }
func (*Connection) ProtoMessage()    {}
func (*Connection) Descriptor() ([]byte, []int) {
	return fileDescriptor_63287bc0525da1b6, []int{0}
}

func (m *Connection) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Connection.Unmarshal(m, b)
}
func (m *Connection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Connection.Marshal(b, m, deterministic)
}
func (m *Connection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Connection.Merge(m, src)
}
func (m *Connection) XXX_Size() int {
	return xxx_messageInfo_Connection.Size(m)
}
func (m *Connection) XXX_DiscardUnknown() {
	xxx_messageInfo_Connection.DiscardUnknown(m)
}

var xxx_messageInfo_Connection proto.InternalMessageInfo

func (m *Connection) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *Connection) GetWeight() int64 {
	if m != nil {
		return m.Weight
	}
	return 0
}

type Connections struct {
	Connections          []*Connection `protobuf:"bytes,1,rep,name=connections,proto3" json:"connections,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Connections) Reset()         { *m = Connections{} }
func (m *Connections) String() string { return proto.CompactTextString(m) }
func (*Connections) ProtoMessage()    {}
func (*Connections) Descriptor() ([]byte, []int) {
	return fileDescriptor_63287bc0525da1b6, []int{1}
}

func (m *Connections) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Connections.Unmarshal(m, b)
}
func (m *Connections) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Connections.Marshal(b, m, deterministic)
}
func (m *Connections) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Connections.Merge(m, src)
}
func (m *Connections) XXX_Size() int {
	return xxx_messageInfo_Connections.Size(m)
}
func (m *Connections) XXX_DiscardUnknown() {
	xxx_messageInfo_Connections.DiscardUnknown(m)
}

var xxx_messageInfo_Connections proto.InternalMessageInfo

func (m *Connections) GetConnections() []*Connection {
	if m != nil {
		return m.Connections
	}
	return nil
}

type NetworkMap struct {
	Nodes                map[string]*Connections `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *NetworkMap) Reset()         { *m = NetworkMap{} }
func (m *NetworkMap) String() string { return proto.CompactTextString(m) }
func (*NetworkMap) ProtoMessage()    {}
func (*NetworkMap) Descriptor() ([]byte, []int) {
	return fileDescriptor_63287bc0525da1b6, []int{2}
}

func (m *NetworkMap) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkMap.Unmarshal(m, b)
}
func (m *NetworkMap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkMap.Marshal(b, m, deterministic)
}
func (m *NetworkMap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkMap.Merge(m, src)
}
func (m *NetworkMap) XXX_Size() int {
	return xxx_messageInfo_NetworkMap.Size(m)
}
func (m *NetworkMap) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkMap.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkMap proto.InternalMessageInfo

func (m *NetworkMap) GetNodes() map[string]*Connections {
	if m != nil {
		return m.Nodes
	}
	return nil
}

type ExchangeReq struct {
	Id                   string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Addr                 string       `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	Connections          *Connections `protobuf:"bytes,3,opt,name=connections,proto3" json:"connections,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ExchangeReq) Reset()         { *m = ExchangeReq{} }
func (m *ExchangeReq) String() string { return proto.CompactTextString(m) }
func (*ExchangeReq) ProtoMessage()    {}
func (*ExchangeReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_63287bc0525da1b6, []int{3}
}

func (m *ExchangeReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExchangeReq.Unmarshal(m, b)
}
func (m *ExchangeReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExchangeReq.Marshal(b, m, deterministic)
}
func (m *ExchangeReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExchangeReq.Merge(m, src)
}
func (m *ExchangeReq) XXX_Size() int {
	return xxx_messageInfo_ExchangeReq.Size(m)
}
func (m *ExchangeReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ExchangeReq.DiscardUnknown(m)
}

var xxx_messageInfo_ExchangeReq proto.InternalMessageInfo

func (m *ExchangeReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ExchangeReq) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *ExchangeReq) GetConnections() *Connections {
	if m != nil {
		return m.Connections
	}
	return nil
}

type PingReq struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingReq) Reset()         { *m = PingReq{} }
func (m *PingReq) String() string { return proto.CompactTextString(m) }
func (*PingReq) ProtoMessage()    {}
func (*PingReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_63287bc0525da1b6, []int{4}
}

func (m *PingReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingReq.Unmarshal(m, b)
}
func (m *PingReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingReq.Marshal(b, m, deterministic)
}
func (m *PingReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingReq.Merge(m, src)
}
func (m *PingReq) XXX_Size() int {
	return xxx_messageInfo_PingReq.Size(m)
}
func (m *PingReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PingReq.DiscardUnknown(m)
}

var xxx_messageInfo_PingReq proto.InternalMessageInfo

func (m *PingReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type PingRes struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingRes) Reset()         { *m = PingRes{} }
func (m *PingRes) String() string { return proto.CompactTextString(m) }
func (*PingRes) ProtoMessage()    {}
func (*PingRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_63287bc0525da1b6, []int{5}
}

func (m *PingRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingRes.Unmarshal(m, b)
}
func (m *PingRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingRes.Marshal(b, m, deterministic)
}
func (m *PingRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingRes.Merge(m, src)
}
func (m *PingRes) XXX_Size() int {
	return xxx_messageInfo_PingRes.Size(m)
}
func (m *PingRes) XXX_DiscardUnknown() {
	xxx_messageInfo_PingRes.DiscardUnknown(m)
}

var xxx_messageInfo_PingRes proto.InternalMessageInfo

func (m *PingRes) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ExchangeRes struct {
	Id                   string        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Connections          []*Connection `protobuf:"bytes,3,rep,name=connections,proto3" json:"connections,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ExchangeRes) Reset()         { *m = ExchangeRes{} }
func (m *ExchangeRes) String() string { return proto.CompactTextString(m) }
func (*ExchangeRes) ProtoMessage()    {}
func (*ExchangeRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_63287bc0525da1b6, []int{6}
}

func (m *ExchangeRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExchangeRes.Unmarshal(m, b)
}
func (m *ExchangeRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExchangeRes.Marshal(b, m, deterministic)
}
func (m *ExchangeRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExchangeRes.Merge(m, src)
}
func (m *ExchangeRes) XXX_Size() int {
	return xxx_messageInfo_ExchangeRes.Size(m)
}
func (m *ExchangeRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ExchangeRes.DiscardUnknown(m)
}

var xxx_messageInfo_ExchangeRes proto.InternalMessageInfo

func (m *ExchangeRes) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ExchangeRes) GetConnections() []*Connection {
	if m != nil {
		return m.Connections
	}
	return nil
}

func init() {
	proto.RegisterType((*Connection)(nil), "grapherino.Connection")
	proto.RegisterType((*Connections)(nil), "grapherino.Connections")
	proto.RegisterType((*NetworkMap)(nil), "grapherino.NetworkMap")
	proto.RegisterMapType((map[string]*Connections)(nil), "grapherino.NetworkMap.NodesEntry")
	proto.RegisterType((*ExchangeReq)(nil), "grapherino.ExchangeReq")
	proto.RegisterType((*PingReq)(nil), "grapherino.PingReq")
	proto.RegisterType((*PingRes)(nil), "grapherino.PingRes")
	proto.RegisterType((*ExchangeRes)(nil), "grapherino.ExchangeRes")
}

func init() {
	proto.RegisterFile("grapherino.proto", fileDescriptor_63287bc0525da1b6)
}

var fileDescriptor_63287bc0525da1b6 = []byte{
	// 319 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0x41, 0x4f, 0xfa, 0x40,
	0x10, 0xc5, 0xb3, 0x2d, 0xf0, 0xff, 0x33, 0x4d, 0x0c, 0x19, 0x13, 0x44, 0x4e, 0xd8, 0x13, 0x17,
	0x89, 0x41, 0x13, 0xd1, 0x78, 0x33, 0x84, 0x93, 0x44, 0xf7, 0xe2, 0xb9, 0xb6, 0x9b, 0x76, 0x03,
	0xd9, 0xad, 0xdb, 0x55, 0x24, 0xf1, 0x83, 0xf8, 0x71, 0x4d, 0x4b, 0xeb, 0x6e, 0xa5, 0x1a, 0x6f,
	0xbb, 0x33, 0xbf, 0xce, 0x9b, 0xf7, 0xb6, 0xd0, 0x8b, 0x55, 0x90, 0x26, 0x4c, 0x71, 0x21, 0x27,
	0xa9, 0x92, 0x5a, 0x22, 0x98, 0x8a, 0x7f, 0x01, 0x70, 0x2b, 0x85, 0x60, 0xa1, 0xe6, 0x52, 0xe0,
	0x01, 0x38, 0x5a, 0x0e, 0xc8, 0x88, 0x8c, 0xbb, 0xd4, 0xd1, 0x12, 0xfb, 0xd0, 0xd9, 0x30, 0x1e,
	0x27, 0x7a, 0xe0, 0x8c, 0xc8, 0xd8, 0xa5, 0xe5, 0xcd, 0x5f, 0x80, 0x67, 0xbe, 0xca, 0x70, 0x06,
	0x5e, 0x68, 0xae, 0x03, 0x32, 0x72, 0xc7, 0xde, 0xb4, 0x3f, 0xb1, 0x84, 0x0d, 0x4d, 0x6d, 0xd4,
	0xff, 0x20, 0x00, 0x4b, 0xa6, 0x37, 0x52, 0xad, 0xee, 0x82, 0x14, 0x2f, 0xa1, 0x2d, 0x64, 0xc4,
	0xaa, 0x11, 0x27, 0xf6, 0x08, 0x83, 0x4d, 0x96, 0x39, 0x33, 0x17, 0x5a, 0x6d, 0xe9, 0x8e, 0x1f,
	0x3e, 0x00, 0x98, 0x22, 0xf6, 0xc0, 0x5d, 0xb1, 0x6d, 0xe9, 0x23, 0x3f, 0xe2, 0x29, 0xb4, 0x5f,
	0x83, 0xf5, 0x0b, 0x2b, 0x7c, 0x78, 0xd3, 0xa3, 0xe6, 0xdd, 0x32, 0xba, 0xa3, 0xae, 0x9d, 0x19,
	0xf1, 0xd7, 0xe0, 0xcd, 0xdf, 0xc2, 0x24, 0x10, 0x31, 0xa3, 0xec, 0x39, 0x8f, 0x86, 0x47, 0x55,
	0x34, 0x3c, 0x42, 0x84, 0x56, 0x10, 0x45, 0xaa, 0x18, 0xd8, 0xa5, 0xc5, 0x19, 0xaf, 0xea, 0x39,
	0xb8, 0xbf, 0x6b, 0xd5, 0x82, 0x38, 0x86, 0x7f, 0xf7, 0x5c, 0xc4, 0x0d, 0x4a, 0xa6, 0x95, 0xed,
	0xb5, 0x1e, 0xed, 0x1d, 0xf7, 0xda, 0xdf, 0xdf, 0xc5, 0xfd, 0xf3, 0xbb, 0x4c, 0xdf, 0x01, 0x16,
	0x5f, 0x14, 0xde, 0xc0, 0xff, 0x4a, 0x06, 0x6b, 0x76, 0xac, 0x80, 0x86, 0x3f, 0x34, 0x32, 0x3c,
	0x83, 0x56, 0xbe, 0x3f, 0x1e, 0xda, 0x40, 0x69, 0x76, 0xd8, 0x50, 0xcc, 0x9e, 0x3a, 0xc5, 0x7f,
	0x7a, 0xfe, 0x19, 0x00, 0x00, 0xff, 0xff, 0x84, 0x40, 0x38, 0xce, 0xbb, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GrapherinoClient is the client API for Grapherino service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GrapherinoClient interface {
	Exchange(ctx context.Context, in *ExchangeReq, opts ...grpc.CallOption) (*ExchangeRes, error)
	Ping(ctx context.Context, in *PingReq, opts ...grpc.CallOption) (*PingRes, error)
}

type grapherinoClient struct {
	cc grpc.ClientConnInterface
}

func NewGrapherinoClient(cc grpc.ClientConnInterface) GrapherinoClient {
	return &grapherinoClient{cc}
}

func (c *grapherinoClient) Exchange(ctx context.Context, in *ExchangeReq, opts ...grpc.CallOption) (*ExchangeRes, error) {
	out := new(ExchangeRes)
	err := c.cc.Invoke(ctx, "/grapherino.Grapherino/Exchange", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *grapherinoClient) Ping(ctx context.Context, in *PingReq, opts ...grpc.CallOption) (*PingRes, error) {
	out := new(PingRes)
	err := c.cc.Invoke(ctx, "/grapherino.Grapherino/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GrapherinoServer is the server API for Grapherino service.
type GrapherinoServer interface {
	Exchange(context.Context, *ExchangeReq) (*ExchangeRes, error)
	Ping(context.Context, *PingReq) (*PingRes, error)
}

// UnimplementedGrapherinoServer can be embedded to have forward compatible implementations.
type UnimplementedGrapherinoServer struct {
}

func (*UnimplementedGrapherinoServer) Exchange(ctx context.Context, req *ExchangeReq) (*ExchangeRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Exchange not implemented")
}
func (*UnimplementedGrapherinoServer) Ping(ctx context.Context, req *PingReq) (*PingRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Ping not implemented")
}

func RegisterGrapherinoServer(s *grpc.Server, srv GrapherinoServer) {
	s.RegisterService(&_Grapherino_serviceDesc, srv)
}

func _Grapherino_Exchange_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExchangeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrapherinoServer).Exchange(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grapherino.Grapherino/Exchange",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrapherinoServer).Exchange(ctx, req.(*ExchangeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Grapherino_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrapherinoServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grapherino.Grapherino/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrapherinoServer).Ping(ctx, req.(*PingReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Grapherino_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grapherino.Grapherino",
	HandlerType: (*GrapherinoServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Exchange",
			Handler:    _Grapherino_Exchange_Handler,
		},
		{
			MethodName: "Ping",
			Handler:    _Grapherino_Ping_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "grapherino.proto",
}
